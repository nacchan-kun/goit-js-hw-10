{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів (доданий до css)\n// import 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\n// import \"izitoast/dist/css/iziToast.min.css\";\n\nimport errorIcon from '/img/izi-toast-svg/error-icon.svg';\nimport successIcon from '/img/izi-toast-svg/success-icon.svg';\n\nconst timer = {\n  userSelectedDate: null,\n  deadlineintervalId: null,\n\n  elements: {\n    inputDateTimePickerEl: document.querySelector('input#datetime-picker'),\n    startTimerBtnEl: document.querySelector('button[data-start]'),\n\n    days: null, // days: document.querySelector('[data-days]'),\n    hours: null, // houers: document.querySelector('[data-hours]'),\n    minutes: null, // minutes: document.querySelector('[data-minutes]'),\n    seconds: null, // seconds: document.querySelector('[data-seconds]'),\n  },\n\n  options: {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      let {\n        elements: { startTimerBtnEl },\n      } = timer;\n\n      timer.userSelectedDate = selectedDates[0]; // Останній обраний час\n      // timer.userSelectedDate = this.latestSelectedDateObj;\n\n      // console.log(this.now); // Поточний час\n      // console.log(this.latestSelectedDateObj); // Останній обраний час\n\n      if (this.latestSelectedDateObj > this.now) {\n        iziToast.success({\n          message: 'Correct date',\n          messageSize: '16',\n          messageColor: '#fff',\n          backgroundColor: '#59a10d',\n          position: 'topRight',\n          closeOnClick: true,\n          timeout: 3500,\n          close: false,\n          iconUrl: successIcon,\n        });\n\n        startTimerBtnEl.disabled = false;\n      } else {\n        iziToast.error({\n          message: 'Please choose a date in the future',\n          messageSize: '16',\n          messageColor: '#fff',\n          backgroundColor: '#ef4040',\n          position: 'topRight',\n          closeOnClick: true,\n          timeout: 3500,\n          close: false,\n          iconUrl: errorIcon,\n        });\n\n        startTimerBtnEl.disabled = true;\n      }\n    },\n  },\n\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  },\n\n  onStartTimerBtnClick() {\n    const {\n      userSelectedDate,\n      elements: {\n        startTimerBtnEl,\n        inputDateTimePickerEl,\n        days,\n        hours,\n        minutes,\n        seconds,\n      },\n    } = timer;\n\n    startTimerBtnEl.disabled = true;\n    inputDateTimePickerEl.disabled = true;\n\n    let deadlineTimeLeft = userSelectedDate - Date.now();\n\n    // console.log(userSelectedDate);\n\n    const startTimerObj = timer.addLeadingZero(\n      timer.convertMs(deadlineTimeLeft)\n    );\n\n    days.textContent = startTimerObj.days;\n    hours.textContent = startTimerObj.hours;\n    minutes.textContent = startTimerObj.minutes;\n    seconds.textContent = startTimerObj.seconds;\n\n    const deadlineintervalId = setInterval(() => {\n      deadlineTimeLeft -= 1000;\n\n      if (deadlineTimeLeft <= 0) {\n        clearInterval(deadlineintervalId);\n        inputDateTimePickerEl.disabled = false;\n        return;\n      }\n\n      const runnigTimerObj = timer.addLeadingZero(\n        timer.convertMs(deadlineTimeLeft)\n      );\n\n      days.textContent = runnigTimerObj.days;\n      hours.textContent = runnigTimerObj.hours;\n      minutes.textContent = runnigTimerObj.minutes;\n      seconds.textContent = runnigTimerObj.seconds;\n\n      // console.log(timer.convertMs(deadlineTimeLeft));\n      // console.log(timer.addLeadingZero(timer.convertMs(deadlineTimeLeft)));\n    }, 1000);\n  },\n\n  addLeadingZero(timeArr) {\n    for (const key in timeArr) {\n      timeArr[key] = String(timeArr[key]).padStart(2, '0');\n    }\n    return timeArr;\n  },\n};\n\nconst {\n  options,\n  elements: { startTimerBtnEl },\n  onStartTimerBtnClick,\n} = timer;\n\nconst {\n  nextElementSibling: { children },\n} = startTimerBtnEl;\n\ntimer.elements.days = children[0].firstElementChild;\ntimer.elements.hours = children[1].firstElementChild;\ntimer.elements.minutes = children[2].firstElementChild;\ntimer.elements.seconds = children[3].firstElementChild;\n\nstartTimerBtnEl.disabled = true;\n\nflatpickr('input#datetime-picker', options);\n\nstartTimerBtnEl.addEventListener('click', onStartTimerBtnClick);"],"names":["timer","selectedDates","startTimerBtnEl","iziToast","successIcon","errorIcon","ms","days","hours","minutes","seconds","userSelectedDate","inputDateTimePickerEl","deadlineTimeLeft","startTimerObj","deadlineintervalId","runnigTimerObj","timeArr","key","options","onStartTimerBtnClick","children","flatpickr"],"mappings":"wJAaA,MAAMA,EAAQ,CACZ,iBAAkB,KAClB,mBAAoB,KAEpB,SAAU,CACR,sBAAuB,SAAS,cAAc,uBAAuB,EACrE,gBAAiB,SAAS,cAAc,oBAAoB,EAE5D,KAAM,KACN,MAAO,KACP,QAAS,KACT,QAAS,IACV,EAED,QAAS,CACP,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAI,CACF,SAAU,CAAE,gBAAAC,CAAiB,CAC9B,EAAGF,EAEJA,EAAM,iBAAmBC,EAAc,CAAC,EAMpC,KAAK,sBAAwB,KAAK,KACpCE,EAAS,QAAQ,CACf,QAAS,eACT,YAAa,KACb,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,QAAS,KACT,MAAO,GACP,QAASC,CACnB,CAAS,EAEDF,EAAgB,SAAW,KAE3BC,EAAS,MAAM,CACb,QAAS,qCACT,YAAa,KACb,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,QAAS,KACT,MAAO,GACP,QAASE,CACnB,CAAS,EAEDH,EAAgB,SAAW,GAE9B,CACF,EAED,UAAUI,EAAI,CAQZ,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,EAED,sBAAuB,CACrB,KAAM,CACJ,iBAAAC,EACA,SAAU,CACR,gBAAAT,EACA,sBAAAU,EACA,KAAAL,EACA,MAAAC,EACA,QAAAC,EACA,QAAAC,CACD,CACF,EAAGV,EAEJE,EAAgB,SAAW,GAC3BU,EAAsB,SAAW,GAEjC,IAAIC,EAAmBF,EAAmB,KAAK,IAAG,EAIlD,MAAMG,EAAgBd,EAAM,eAC1BA,EAAM,UAAUa,CAAgB,CACtC,EAEIN,EAAK,YAAcO,EAAc,KACjCN,EAAM,YAAcM,EAAc,MAClCL,EAAQ,YAAcK,EAAc,QACpCJ,EAAQ,YAAcI,EAAc,QAEpC,MAAMC,EAAqB,YAAY,IAAM,CAG3C,GAFAF,GAAoB,IAEhBA,GAAoB,EAAG,CACzB,cAAcE,CAAkB,EAChCH,EAAsB,SAAW,GACjC,MACD,CAED,MAAMI,EAAiBhB,EAAM,eAC3BA,EAAM,UAAUa,CAAgB,CACxC,EAEMN,EAAK,YAAcS,EAAe,KAClCR,EAAM,YAAcQ,EAAe,MACnCP,EAAQ,YAAcO,EAAe,QACrCN,EAAQ,YAAcM,EAAe,OAItC,EAAE,GAAI,CACR,EAED,eAAeC,EAAS,CACtB,UAAWC,KAAOD,EAChBA,EAAQC,CAAG,EAAI,OAAOD,EAAQC,CAAG,CAAC,EAAE,SAAS,EAAG,GAAG,EAErD,OAAOD,CACR,CACH,EAEM,CACJ,QAAAE,EACA,SAAU,CAAE,gBAAAjB,CAAiB,EAC7B,qBAAAkB,CACF,EAAIpB,EAEE,CACJ,mBAAoB,CAAE,SAAAqB,CAAU,CAClC,EAAInB,EAEJF,EAAM,SAAS,KAAOqB,EAAS,CAAC,EAAE,kBAClCrB,EAAM,SAAS,MAAQqB,EAAS,CAAC,EAAE,kBACnCrB,EAAM,SAAS,QAAUqB,EAAS,CAAC,EAAE,kBACrCrB,EAAM,SAAS,QAAUqB,EAAS,CAAC,EAAE,kBAErCnB,EAAgB,SAAW,GAE3BoB,EAAU,wBAAyBH,CAAO,EAE1CjB,EAAgB,iBAAiB,QAASkB,CAAoB"}