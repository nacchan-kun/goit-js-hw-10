{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\n// import \"izitoast/dist/css/iziToast.min.css\";\n\nimport errorIcon from '/img/izi-toast-svg/error-icon.svg';\nimport successIcon from '/img/izi-toast-svg/success-icon.svg';\n\nconst snackbar = {\n  formEl: document.querySelector('.form'),\n  delay: null,\n  chosenState: null,\n\n  createPromise(chosenState, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (chosenState === 'fulfilled') {\n          resolve(delay);\n        } else {\n          reject(delay);\n        }\n      }, delay);\n    });\n  },\n\n  onFormSubmit(event) {\n    event.preventDefault();\n\n    this.delay = this.formEl.delay.value;\n    this.chosenState = this.formEl.state.value;\n\n    const { delay, chosenState } = this;\n\n    this.createPromise(chosenState, delay)\n      .then(delay => {\n        iziToast.success({\n          message: `Fulfilled promise in ${delay}ms`,\n          messageSize: '16',\n          messageColor: '#fff',\n          backgroundColor: '#59a10d',\n          position: 'topRight',\n          closeOnClick: true,\n          timeout: 3500,\n          close: false,\n          iconUrl: successIcon,\n        });\n\n        // console.log(chosenState);\n        // console.log(delay);\n      })\n      .catch(delay => {\n        iziToast.error({\n          message: `Rejected promise in ${delay}ms`,\n          messageSize: '16',\n          messageColor: '#fff',\n          backgroundColor: '#ef4040',\n          position: 'topRight',\n          closeOnClick: true,\n          timeout: 3500,\n          close: false,\n          iconUrl: errorIcon,\n        });\n\n        // console.log(chosenState);\n        // console.log(delay);\n      });\n\n    this.formEl.reset();\n  },\n};\n\nsnackbar.formEl.addEventListener(\n  'submit',\n  snackbar.onFormSubmit.bind(snackbar)\n);\n\ndocument.querySelectorAll('.form fieldset input').forEach(input => {\n  input.addEventListener('focus', event => {\n    event.target.closest('fieldset').classList.add('focused');\n  });\n\n  input.addEventListener('blur', event => {\n    event.target.closest('fieldset').classList.remove('focused');\n  });\n});"],"names":["snackbar","chosenState","delay","resolve","reject","event","iziToast","successIcon","errorIcon","input"],"mappings":"4IAQA,MAAMA,EAAW,CACf,OAAQ,SAAS,cAAc,OAAO,EACtC,MAAO,KACP,YAAa,KAEb,cAAcC,EAAaC,EAAO,CAChC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXH,IAAgB,YAClBE,EAAQD,CAAK,EAEbE,EAAOF,CAAK,CAEf,EAAEA,CAAK,CACd,CAAK,CACF,EAED,aAAaG,EAAO,CAClBA,EAAM,eAAc,EAEpB,KAAK,MAAQ,KAAK,OAAO,MAAM,MAC/B,KAAK,YAAc,KAAK,OAAO,MAAM,MAErC,KAAM,CAAE,MAAAH,EAAO,YAAAD,CAAa,EAAG,KAE/B,KAAK,cAAcA,EAAaC,CAAK,EAClC,KAAKA,GAAS,CACbI,EAAS,QAAQ,CACf,QAAS,wBAAwBJ,CAAK,KACtC,YAAa,KACb,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,QAAS,KACT,MAAO,GACP,QAASK,CACnB,CAAS,CAIT,CAAO,EACA,MAAML,GAAS,CACdI,EAAS,MAAM,CACb,QAAS,uBAAuBJ,CAAK,KACrC,YAAa,KACb,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,QAAS,KACT,MAAO,GACP,QAASM,CACnB,CAAS,CAIT,CAAO,EAEH,KAAK,OAAO,OACb,CACH,EAEAR,EAAS,OAAO,iBACd,SACAA,EAAS,aAAa,KAAKA,CAAQ,CACrC,EAEA,SAAS,iBAAiB,sBAAsB,EAAE,QAAQS,GAAS,CACjEA,EAAM,iBAAiB,QAASJ,GAAS,CACvCA,EAAM,OAAO,QAAQ,UAAU,EAAE,UAAU,IAAI,SAAS,CAC5D,CAAG,EAEDI,EAAM,iBAAiB,OAAQJ,GAAS,CACtCA,EAAM,OAAO,QAAQ,UAAU,EAAE,UAAU,OAAO,SAAS,CAC/D,CAAG,CACH,CAAC"}